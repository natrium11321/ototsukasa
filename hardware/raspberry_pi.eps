%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.8.1-20121123-13-g875406c
%%CreationDate: Tue Jun 16 09:58:11 2015
%%Title: /home/mistpc/Desktop/raspberry_pi.sch
%%Author: (null)
%%BoundingBox: 0 0 1224 792
%%Orientation: Portrait
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
51500 44100 51400 43900 10 line
51400 43900 51300 44100 10 line
51300 44100 51200 43900 10 line
51200 43900 51100 44100 10 line
51500 44100 51600 43900 10 line
51600 43900 51650 44000 10 line
51800 44000 51650 44000 10 line
50900 44000 51052 44000 10 line
51101 44100 51050 44000 10 line
grestore
gsave
false false false false 202.222224 [(R-G) ] 0 51100 44200 180.555557 text
grestore
gsave
false false false false 202.222224 [(250R) ] 0 51100 43700 180.555557 text
grestore
gsave
52300 44000 52500 44000 10 line
gsave
false true false false 161.777776 [(1) ] 0 52450 44050 144.444443 text
grestore
53200 44000 53000 44000 10 line
gsave
false false false false 161.777776 [(2) ] 0 53050 44050 144.444443 text
grestore
52700 44100 52800 44000 10 line
52800 44000 52700 43900 10 line
52700 44100 52700 43900 10 line
52800 44100 52800 43900 10 line
52800 44000 53000 44000 10 line
52700 44000 52500 44000 10 line
52750 44000 200 0 360 10 darc
52816 44303 52917 44404 10 line
52917 44404 52921 44355 10 line
52921 44355 53022 44457 10 line
52784 44218 52885 44318 10 line
52885 44318 52889 44269 10 line
52889 44269 52990 44370 10 line
grestore
gsave
false false false false 202.222224 [(LED-G) ] 0 53100 44200 180.555557 text
grestore
gsave
50300 46700 50300 46900 10 line
gsave
false false false true 121.333336 [(C) ] 0 50200 46850 108.333336 text
grestore
50300 47500 50300 47700 10 line
gsave
false false false true 121.333336 [(E) ] 0 50200 47650 108.333336 text
grestore
50200 47199 316 0 360 10 darc
50300 47500 50100 47300 10 line
50300 46900 50100 47100 10 line
50100 47000 50100 47400 10 line
49700 47200 49884 47200 10 line
gsave
false false false true 121.333336 [(B) ] 0 49800 47150 108.333336 text
grestore
50100 47200 49884 47200 10 line
10 setlinewidth
50210 47460 moveto 50301 47500 lineto 50255 47405 lineto 50235 47435 lineto closepath stroke
50210 47460 moveto 50301 47500 lineto 50255 47405 lineto 50235 47435 lineto closepath fill
grestore
gsave
false false false true 202.222224 [(Q) ] 0 50600 47200 180.555557 text
grestore
gsave
52300 43200 52500 43200 10 line
gsave
false true false false 161.777776 [(1) ] 0 52450 43250 144.444443 text
grestore
53200 43200 53000 43200 10 line
gsave
false false false false 161.777776 [(2) ] 0 53050 43250 144.444443 text
grestore
52700 43300 52800 43200 10 line
52800 43200 52700 43100 10 line
52700 43300 52700 43100 10 line
52800 43300 52800 43100 10 line
52800 43200 53000 43200 10 line
52700 43200 52500 43200 10 line
52750 43200 200 0 360 10 darc
52816 43503 52917 43604 10 line
52917 43604 52921 43555 10 line
52921 43555 53022 43657 10 line
52784 43418 52885 43518 10 line
52885 43518 52889 43469 10 line
52889 43469 52990 43570 10 line
grestore
gsave
false false false false 202.222224 [(LED-Y) ] 0 53100 43400 180.555557 text
grestore
gsave
52300 42400 52500 42400 10 line
gsave
false true false false 161.777776 [(1) ] 0 52450 42450 144.444443 text
grestore
53200 42400 53000 42400 10 line
gsave
false false false false 161.777776 [(2) ] 0 53050 42450 144.444443 text
grestore
52700 42500 52800 42400 10 line
52800 42400 52700 42300 10 line
52700 42500 52700 42300 10 line
52800 42500 52800 42300 10 line
52800 42400 53000 42400 10 line
52700 42400 52500 42400 10 line
52750 42400 200 0 360 10 darc
52816 42703 52917 42804 10 line
52917 42804 52921 42755 10 line
52921 42755 53022 42857 10 line
52784 42618 52885 42718 10 line
52885 42718 52889 42669 10 line
52889 42669 52990 42770 10 line
grestore
gsave
false false false false 202.222224 [(LED-R) ] 0 53100 42600 180.555557 text
grestore
gsave
53700 41800 53700 42000 10 line
53600 41800 53800 41800 10 line
53655 41750 53745 41750 10 line
53680 41710 53720 41710 10 line
grestore
50900 45900 51700 45900 10 line
51700 45900 51700 46700 10 line
51700 46700 50900 46700 10 line
50900 46700 50900 45900 10 line
51700 46300 51900 46300 10 line
50900 46300 50700 46300 10 line
gsave
false false false false 202.222224 [(Diffuser) ] 0 50955 46295 180.555557 text
grestore
gsave
51500 43300 51400 43100 10 line
51400 43100 51300 43300 10 line
51300 43300 51200 43100 10 line
51200 43100 51100 43300 10 line
51500 43300 51600 43100 10 line
51600 43100 51650 43200 10 line
51800 43200 51650 43200 10 line
50900 43200 51052 43200 10 line
51101 43300 51050 43200 10 line
grestore
gsave
false false false false 202.222224 [(R-Y) ] 0 51100 43400 180.555557 text
grestore
gsave
false false false false 202.222224 [(250R) ] 0 51100 42900 180.555557 text
grestore
gsave
51500 42500 51400 42300 10 line
51400 42300 51300 42500 10 line
51300 42500 51200 42300 10 line
51200 42300 51100 42500 10 line
51500 42500 51600 42300 10 line
51600 42300 51650 42400 10 line
51800 42400 51650 42400 10 line
50900 42400 51052 42400 10 line
51101 42500 51050 42400 10 line
grestore
gsave
false false false false 202.222224 [(R-R) ] 0 51100 42600 180.555557 text
grestore
gsave
false false false false 202.222224 [(250R) ] 0 51100 42100 180.555557 text
grestore
51800 44000 52300 44000 10 line
51800 43200 52300 43200 10 line
51800 42400 52300 42400 10 line
53700 42000 53700 44800 10 line
53700 44000 53200 44000 10 line
53200 43200 53700 43200 10 line
53200 42400 53700 42400 10 line
44800 44900 46000 44900 10 line
46000 44900 46000 45500 10 line
46000 45500 44800 45500 10 line
44800 45500 44800 44900 10 line
gsave
false false false false 202.222224 [(Sensor) ] 0 45100 45200 180.555557 text
grestore
46000 45200 300 270 450 10 darc
44600 45500 44800 45500 10 line
gsave
false false false false 202.222224 [(Vcc) ] 0 44255 45595 180.555557 text
grestore
44600 45200 44800 45200 10 line
gsave
false false false false 202.222224 [(Vout) ] 0 44255 45295 180.555557 text
grestore
44600 44900 44800 44900 10 line
gsave
false false false false 202.222224 [(GND) ] 0 44255 44995 180.555557 text
grestore
47000 42200 49000 42200 10 line
49000 42200 49000 50200 10 line
49000 50200 47000 50200 10 line
47000 50200 47000 42200 10 line
46700 50000 47000 50000 10 line
gsave
false false false false 202.222224 [(3V3) ] 0 47055 49995 180.555557 text
grestore
gsave
false true false false 202.222224 [(1) ] 0 46905 50045 180.555557 text
grestore
46700 49600 47000 49600 10 line
gsave
false false false false 202.222224 [(SDA) ] 0 47055 49595 180.555557 text
grestore
gsave
false true false false 202.222224 [(3) ] 0 46905 49645 180.555557 text
grestore
46700 49200 47000 49200 10 line
gsave
false false false false 202.222224 [(SCL) ] 0 47055 49195 180.555557 text
grestore
gsave
false true false false 202.222224 [(5) ] 0 46905 49245 180.555557 text
grestore
46700 48800 47000 48800 10 line
gsave
false false false false 202.222224 [(#4) ] 0 47055 48795 180.555557 text
grestore
gsave
false true false false 202.222224 [(7) ] 0 46905 48845 180.555557 text
grestore
46700 48400 47000 48400 10 line
gsave
false false false false 202.222224 [(GND) ] 0 47055 48395 180.555557 text
grestore
gsave
false true false false 202.222224 [(9) ] 0 46905 48445 180.555557 text
grestore
46700 48000 47000 48000 10 line
gsave
false false false false 202.222224 [(#17) ] 0 47055 47995 180.555557 text
grestore
gsave
false true false false 202.222224 [(11) ] 0 46905 48045 180.555557 text
grestore
46700 47600 47000 47600 10 line
gsave
false false false false 202.222224 [(#27) ] 0 47055 47595 180.555557 text
grestore
gsave
false true false false 202.222224 [(13) ] 0 46905 47645 180.555557 text
grestore
46700 47200 47000 47200 10 line
gsave
false false false false 202.222224 [(#22) ] 0 47055 47195 180.555557 text
grestore
gsave
false true false false 202.222224 [(15) ] 0 46905 47245 180.555557 text
grestore
46700 46800 47000 46800 10 line
gsave
false false false false 202.222224 [(3.3V) ] 0 47055 46795 180.555557 text
grestore
gsave
false true false false 202.222224 [(17) ] 0 46905 46845 180.555557 text
grestore
46700 46400 47000 46400 10 line
gsave
false false false false 202.222224 [(MOSI) ] 0 47055 46395 180.555557 text
grestore
gsave
false true false false 202.222224 [(19) ] 0 46905 46445 180.555557 text
grestore
46700 46000 47000 46000 10 line
gsave
false false false false 202.222224 [(MISO) ] 0 47055 45995 180.555557 text
grestore
gsave
false true false false 202.222224 [(21) ] 0 46905 46045 180.555557 text
grestore
46700 45600 47000 45600 10 line
gsave
false false false false 202.222224 [(SCLK) ] 0 47055 45595 180.555557 text
grestore
gsave
false true false false 202.222224 [(23) ] 0 46905 45645 180.555557 text
grestore
46700 45200 47000 45200 10 line
gsave
false false false false 202.222224 [(GND) ] 0 47055 45195 180.555557 text
grestore
gsave
false true false false 202.222224 [(25) ] 0 46905 45245 180.555557 text
grestore
46700 44800 47000 44800 10 line
gsave
false false false false 202.222224 [(EED) ] 0 47055 44795 180.555557 text
grestore
gsave
false true false false 202.222224 [(27) ] 0 46905 44845 180.555557 text
grestore
46700 44400 47000 44400 10 line
gsave
false false false false 202.222224 [(#5) ] 0 47055 44395 180.555557 text
grestore
gsave
false true false false 202.222224 [(29) ] 0 46905 44445 180.555557 text
grestore
46700 44000 47000 44000 10 line
gsave
false false false false 202.222224 [(#6) ] 0 47055 43995 180.555557 text
grestore
gsave
false true false false 202.222224 [(31) ] 0 46905 44045 180.555557 text
grestore
46700 43600 47000 43600 10 line
gsave
false false false false 202.222224 [(#13) ] 0 47055 43595 180.555557 text
grestore
gsave
false true false false 202.222224 [(33) ] 0 46905 43645 180.555557 text
grestore
46700 43200 47000 43200 10 line
gsave
false false false false 202.222224 [(#19) ] 0 47055 43195 180.555557 text
grestore
gsave
false true false false 202.222224 [(35) ] 0 46905 43245 180.555557 text
grestore
46700 42800 47000 42800 10 line
gsave
false false false false 202.222224 [(#26) ] 0 47055 42795 180.555557 text
grestore
gsave
false true false false 202.222224 [(37) ] 0 46905 42845 180.555557 text
grestore
46700 42400 47000 42400 10 line
gsave
false false false false 202.222224 [(GND) ] 0 47055 42395 180.555557 text
grestore
gsave
false true false false 202.222224 [(39) ] 0 46905 42445 180.555557 text
grestore
49300 50000 49000 50000 10 line
gsave
false true false false 202.222224 [(5.0V) ] 0 48945 49995 180.555557 text
grestore
gsave
false false false false 202.222224 [(2) ] 0 49095 50045 180.555557 text
grestore
49300 49600 49000 49600 10 line
gsave
false true false false 202.222224 [(5.0V) ] 0 48945 49595 180.555557 text
grestore
gsave
false false false false 202.222224 [(4) ] 0 49095 49645 180.555557 text
grestore
49300 49200 49000 49200 10 line
gsave
false true false false 202.222224 [(GND) ] 0 48945 49195 180.555557 text
grestore
gsave
false false false false 202.222224 [(6) ] 0 49095 49245 180.555557 text
grestore
49300 48800 49000 48800 10 line
gsave
false true false false 202.222224 [(TXD) ] 0 48945 48795 180.555557 text
grestore
gsave
false false false false 202.222224 [(8) ] 0 49095 48845 180.555557 text
grestore
49300 48400 49000 48400 10 line
gsave
false true false false 202.222224 [(RXD) ] 0 48945 48395 180.555557 text
grestore
gsave
false false false false 202.222224 [(10) ] 0 49095 48445 180.555557 text
grestore
49300 48000 49000 48000 10 line
gsave
false true false false 202.222224 [(#18) ] 0 48945 47995 180.555557 text
grestore
gsave
false false false false 202.222224 [(12) ] 0 49095 48045 180.555557 text
grestore
49300 47600 49000 47600 10 line
gsave
false true false false 202.222224 [(GND) ] 0 48945 47595 180.555557 text
grestore
gsave
false false false false 202.222224 [(14) ] 0 49095 47645 180.555557 text
grestore
49300 47200 49000 47200 10 line
gsave
false true false false 202.222224 [(#23) ] 0 48945 47195 180.555557 text
grestore
gsave
false false false false 202.222224 [(16) ] 0 49095 47245 180.555557 text
grestore
49300 46800 49000 46800 10 line
gsave
false true false false 202.222224 [(#24) ] 0 48945 46795 180.555557 text
grestore
gsave
false false false false 202.222224 [(18) ] 0 49095 46845 180.555557 text
grestore
49300 46400 49000 46400 10 line
gsave
false true false false 202.222224 [(GND) ] 0 48945 46395 180.555557 text
grestore
gsave
false false false false 202.222224 [(20) ] 0 49095 46445 180.555557 text
grestore
49300 46000 49000 46000 10 line
gsave
false true false false 202.222224 [(#25) ] 0 48945 45995 180.555557 text
grestore
gsave
false false false false 202.222224 [(22) ] 0 49095 46045 180.555557 text
grestore
49300 45600 49000 45600 10 line
gsave
false true false false 202.222224 [(CE0) ] 0 48945 45595 180.555557 text
grestore
gsave
false false false false 202.222224 [(24) ] 0 49095 45645 180.555557 text
grestore
49300 45200 49000 45200 10 line
gsave
false true false false 202.222224 [(CE1) ] 0 48945 45195 180.555557 text
grestore
gsave
false false false false 202.222224 [(26) ] 0 49095 45245 180.555557 text
grestore
49300 44800 49000 44800 10 line
gsave
false true false false 202.222224 [(EEC) ] 0 48945 44795 180.555557 text
grestore
gsave
false false false false 202.222224 [(28) ] 0 49095 44845 180.555557 text
grestore
49300 44400 49000 44400 10 line
gsave
false true false false 202.222224 [(GND) ] 0 48945 44395 180.555557 text
grestore
gsave
false false false false 202.222224 [(30) ] 0 49095 44445 180.555557 text
grestore
49300 44000 49000 44000 10 line
gsave
false true false false 202.222224 [(#12) ] 0 48945 43995 180.555557 text
grestore
gsave
false false false false 202.222224 [(32) ] 0 49095 44045 180.555557 text
grestore
49300 43600 49000 43600 10 line
gsave
false true false false 202.222224 [(GND) ] 0 48945 43595 180.555557 text
grestore
gsave
false false false false 202.222224 [(34) ] 0 49095 43645 180.555557 text
grestore
49300 43200 49000 43200 10 line
gsave
false true false false 202.222224 [(#16) ] 0 48945 43195 180.555557 text
grestore
gsave
false false false false 202.222224 [(36) ] 0 49095 43245 180.555557 text
grestore
49300 42800 49000 42800 10 line
gsave
false true false false 202.222224 [(#20) ] 0 48945 42795 180.555557 text
grestore
gsave
false false false false 202.222224 [(38) ] 0 49095 42845 180.555557 text
grestore
49300 42400 49000 42400 10 line
gsave
false true false false 202.222224 [(#21) ] 0 48945 42395 180.555557 text
grestore
gsave
false false false false 202.222224 [(40) ] 0 49095 42445 180.555557 text
grestore
46700 42800 43800 42800 10 line
43800 42800 43800 45200 10 line
43800 45200 44600 45200 10 line
44200 44900 44200 42400 10 line
44200 42400 46700 42400 10 line
46700 46800 44200 46800 10 line
44200 46800 44200 45500 10 line
44200 45500 44600 45500 10 line
44200 44900 44600 44900 10 line
gsave
45600 41800 45600 42000 10 line
45500 41800 45700 41800 10 line
45555 41750 45645 41750 10 line
45580 41710 45620 41710 10 line
grestore
45600 42000 45600 42400 10 line
gsave
52300 46900 52300 47100 10 line
gsave
false true false false 161.777776 [(1) ] 90 52250 47050 144.444443 text
grestore
52300 47600 52300 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 52250 47450 144.444443 text
grestore
52100 47200 52500 47200 10 line
52200 47300 52400 47300 10 line
52300 47400 52300 47300 10 line
52300 47100 52300 47200 10 line
grestore
gsave
false true false true 202.222224 [(B) ] 0 51900 47300 180.555557 text
grestore
gsave
51300 47500 51300 47700 10 line
51200 47500 51400 47500 10 line
51255 47450 51345 47450 10 line
51280 47410 51320 47410 10 line
grestore
49700 47200 49300 47200 10 line
50300 47700 50300 48100 10 line
49700 48100 52300 48100 10 line
52300 46900 52300 46300 10 line
52300 46300 51900 46300 10 line
50700 46300 50300 46300 10 line
50300 46300 50300 46700 10 line
52300 48100 52300 47600 10 line
51300 48100 51300 47700 10 line
49300 42400 50900 42400 10 line
49300 43200 50100 43200 10 line
50100 43200 50100 44000 10 line
50100 44000 50900 44000 10 line
49300 42800 50500 42800 10 line
50900 43200 50500 43200 10 line
50500 43200 50500 42800 10 line
49700 44800 53700 44800 10 line
49300 43600 49700 43600 10 line
49700 43600 49700 44800 10 line
49700 48100 49700 47600 10 line
49300 47600 49700 47600 10 line
newpath
53700 44000
25
0 360 arc
fill
newpath
53700 43200
25
0 360 arc
fill
newpath
53700 42400
25
0 360 arc
fill
newpath
53700 44000
25
0 360 arc
fill
newpath
53700 44000
25
0 360 arc
fill
newpath
53700 43200
25
0 360 arc
fill
newpath
53700 43200
25
0 360 arc
fill
newpath
53700 42400
25
0 360 arc
fill
newpath
53700 42400
25
0 360 arc
fill
60 60 46670 49970 fbox
60 60 46670 49570 fbox
60 60 46670 49170 fbox
60 60 46670 48770 fbox
60 60 46670 48370 fbox
60 60 46670 47970 fbox
60 60 46670 47570 fbox
60 60 46670 47170 fbox
60 60 46670 46370 fbox
60 60 46670 45970 fbox
60 60 46670 45570 fbox
60 60 46670 45170 fbox
60 60 46670 44770 fbox
60 60 46670 44370 fbox
60 60 46670 43970 fbox
60 60 46670 43570 fbox
60 60 46670 43170 fbox
60 60 49270 49970 fbox
60 60 49270 49570 fbox
60 60 49270 49170 fbox
60 60 49270 48770 fbox
60 60 49270 48370 fbox
60 60 49270 47970 fbox
60 60 49270 46770 fbox
60 60 49270 46370 fbox
60 60 49270 45970 fbox
60 60 49270 45570 fbox
60 60 49270 45170 fbox
60 60 49270 44770 fbox
60 60 49270 44370 fbox
60 60 49270 43970 fbox
newpath
45600 42400
25
0 360 arc
fill
newpath
45600 42400
25
0 360 arc
fill
newpath
45600 42400
25
0 360 arc
fill
newpath
50300 48100
25
0 360 arc
fill
newpath
50300 48100
25
0 360 arc
fill
newpath
50300 48100
25
0 360 arc
fill
newpath
51300 48100
25
0 360 arc
fill
newpath
51300 48100
25
0 360 arc
fill
newpath
51300 48100
25
0 360 arc
fill
showpage
%%End
